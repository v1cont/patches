diff -urNp mc-4.8.27-orig/lib/util.c mc-4.8.27/lib/util.c
--- mc-4.8.27-orig/lib/util.c	2021-08-01 19:45:58.000000000 +0300
+++ mc-4.8.27/lib/util.c	2021-08-16 11:09:44.873999439 +0300
@@ -722,101 +722,6 @@ skip_numbers (const char *s)
 }
 
 /* --------------------------------------------------------------------------------------------- */
-/**
- * Remove all control sequences from the argument string.  We define
- * "control sequence", in a sort of pidgin BNF, as follows:
- *
- * control-seq = Esc non-'['
- *             | Esc '[' (0 or more digits or ';' or ':' or '?') (any other char)
- *
- * The 256-color and true-color escape sequences should allow either ';' or ':' inside as separator,
- * actually, ':' is the more correct according to ECMA-48.
- * Some terminal emulators (e.g. xterm, gnome-terminal) support this.
- *
- * Non-printable characters are also removed.
- */
-
-char *
-strip_ctrl_codes (char *s)
-{
-    char *w;                    /* Current position where the stripped data is written */
-    char *r;                    /* Current position where the original data is read */
-
-    if (s == NULL)
-        return NULL;
-
-    for (w = s, r = s; *r != '\0';)
-    {
-        if (*r == ESC_CHAR)
-        {
-            /* Skip the control sequence's arguments */ ;
-            /* '(' need to avoid strange 'B' letter in *Suse (if mc runs under root user) */
-            if (*(++r) == '[' || *r == '(')
-            {
-                /* strchr() matches trailing binary 0 */
-                while (*(++r) != '\0' && strchr ("0123456789;:?", *r) != NULL)
-                    ;
-            }
-            else if (*r == ']')
-            {
-                /*
-                 * Skip xterm's OSC (Operating System Command)
-                 * http://www.xfree86.org/current/ctlseqs.html
-                 * OSC P s ; P t ST
-                 * OSC P s ; P t BEL
-                 */
-                char *new_r;
-
-                for (new_r = r; *new_r != '\0'; new_r++)
-                {
-                    switch (*new_r)
-                    {
-                        /* BEL */
-                    case '\a':
-                        r = new_r;
-                        goto osc_out;
-                    case ESC_CHAR:
-                        /* ST */
-                        if (new_r[1] == '\\')
-                        {
-                            r = new_r + 1;
-                            goto osc_out;
-                        }
-                        break;
-                    default:
-                        break;
-                    }
-                }
-              osc_out:
-                ;
-            }
-
-            /*
-             * Now we are at the last character of the sequence.
-             * Skip it unless it's binary 0.
-             */
-            if (*r != '\0')
-                r++;
-        }
-        else
-        {
-            char *n;
-
-            n = str_get_next_char (r);
-            if (str_isprint (r))
-            {
-                memmove (w, r, n - r);
-                w += n - r;
-            }
-            r = n;
-        }
-    }
-
-    *w = '\0';
-    return s;
-}
-
-/* --------------------------------------------------------------------------------------------- */
 
 enum compression_type
 get_compression_type (int fd, const char *name)
diff -urNp mc-4.8.27-orig/lib/util.h mc-4.8.27/lib/util.h
--- mc-4.8.27-orig/lib/util.h	2021-08-01 19:45:58.000000000 +0300
+++ mc-4.8.27/lib/util.h	2021-08-16 11:09:44.873999439 +0300
@@ -180,7 +180,6 @@ const char *extension (const char *);
 const char *unix_error_string (int error_num);
 const char *skip_separators (const char *s);
 const char *skip_numbers (const char *s);
-char *strip_ctrl_codes (char *s);
 
 /* Replaces "\\E" and "\\e" with "\033". Replaces "^" + [a-z] with
  * ((char) 1 + (c - 'a')). The same goes for "^" + [A-Z].
diff -urNp mc-4.8.27-orig/src/execute.c mc-4.8.27/src/execute.c
--- mc-4.8.27-orig/src/execute.c	2021-08-01 19:45:58.000000000 +0300
+++ mc-4.8.27/src/execute.c	2021-08-16 11:09:44.874999439 +0300
@@ -309,7 +309,7 @@ do_executev (const char *shell, int flag
 
     if (!mc_global.tty.use_subshell && *argv != NULL && (flags & EXECUTE_INTERNAL) == 0)
     {
-        printf ("%s%s\n", mc_prompt, *argv);
+        printf ("> %s\n", *argv);
         fflush (stdout);
     }
 #ifdef ENABLE_SUBSHELL
diff -urNp mc-4.8.27-orig/src/filemanager/filemanager.c mc-4.8.27/src/filemanager/filemanager.c
--- mc-4.8.27-orig/src/filemanager/filemanager.c	2021-08-01 19:45:58.000000000 +0300
+++ mc-4.8.27/src/filemanager/filemanager.c	2021-08-16 11:09:44.874999439 +0300
@@ -110,9 +110,6 @@ WLabel *the_hint;
 /* The button bar */
 WButtonBar *the_bar;
 
-/* The prompt */
-const char *mc_prompt = NULL;
-
 /*** file scope macro definitions ****************************************************************/
 
 #ifdef HAVE_CHARSET
@@ -930,7 +927,7 @@ create_file_manager (void)
     cmdline = command_new (0, 0, 0);
     group_add_widget (g, cmdline);
 
-    the_prompt = label_new (0, 0, mc_prompt);
+    the_prompt = label_new (0, 0, "> ");
     the_prompt->transparent = TRUE;
     group_add_widget (g, the_prompt);
 
diff -urNp mc-4.8.27-orig/src/filemanager/filemanager.h mc-4.8.27/src/filemanager/filemanager.h
--- mc-4.8.27-orig/src/filemanager/filemanager.h	2021-01-10 13:50:16.000000000 +0200
+++ mc-4.8.27/src/filemanager/filemanager.h	2021-08-16 11:09:44.874999439 +0300
@@ -35,8 +35,6 @@ extern WPanel *left_panel;
 extern WPanel *right_panel;
 extern WPanel *current_panel;
 
-extern const char *mc_prompt;
-
 /*** declarations of public functions ************************************************************/
 
 void update_menu (void);
diff -urNp mc-4.8.27-orig/src/filemanager/layout.c mc-4.8.27/src/filemanager/layout.c
--- mc-4.8.27-orig/src/filemanager/layout.c	2021-08-01 19:45:58.000000000 +0300
+++ mc-4.8.27/src/filemanager/layout.c	2021-08-16 11:10:07.400999437 +0300
@@ -970,51 +970,16 @@ void
 setup_cmdline (void)
 {
     const Widget *mw = CONST_WIDGET (filemanager);
-    int prompt_width;
     int y;
-    char *tmp_prompt = (char *) mc_prompt;
 
     if (!command_prompt)
         return;
 
-#ifdef ENABLE_SUBSHELL
-    if (mc_global.tty.use_subshell)
-    {
-        /* Workaround: avoid crash on FreeBSD (see ticket #4213 for details)  */
-        if (subshell_prompt != NULL)
-            tmp_prompt = g_string_free (subshell_prompt, FALSE);
-        else
-            tmp_prompt = g_strdup (mc_prompt);
-        (void) strip_ctrl_codes (tmp_prompt);
-    }
-#endif
-
-    prompt_width = str_term_width1 (tmp_prompt);
-
-    /* Check for prompts too big */
-    if (mw->cols > 8 && prompt_width > mw->cols - 8)
-    {
-        int prompt_len;
-
-        prompt_width = mw->cols - 8;
-        prompt_len = str_offset_to_pos (tmp_prompt, prompt_width);
-        tmp_prompt[prompt_len] = '\0';
-    }
-
-#ifdef ENABLE_SUBSHELL
-    if (mc_global.tty.use_subshell)
-    {
-        subshell_prompt = g_string_new (tmp_prompt);
-        g_free (tmp_prompt);
-        mc_prompt = subshell_prompt->str;
-    }
-#endif
-
     y = mw->lines - 1 - (mc_global.keybar_visible ? 1 : 0);
 
-    widget_set_size (WIDGET (the_prompt), y, mw->x, 1, prompt_width);
-    label_set_text (the_prompt, mc_prompt);
-    widget_set_size (WIDGET (cmdline), y, mw->x + prompt_width, 1, mw->cols - prompt_width);
+    widget_set_size (WIDGET (the_prompt), y, mw->x, 1, 3);
+    label_set_text (the_prompt, geteuid() != 0 ? "$> " : "#> ");
+    widget_set_size (WIDGET (cmdline), y, mw->x + 3, 1, mw->cols - 3);
 
     widget_show (WIDGET (the_prompt));
     widget_show (WIDGET (cmdline));
diff -urNp mc-4.8.27-orig/src/main.c mc-4.8.27/src/main.c
--- mc-4.8.27-orig/src/main.c	2021-08-01 19:45:58.000000000 +0300
+++ mc-4.8.27/src/main.c	2021-08-16 11:09:44.874999439 +0300
@@ -443,9 +443,6 @@ main (int argc, char *argv[])
         /* Done after tty_enter_ca_mode (tty_init) because in VTE bracketed mode is
            separate for the normal and alternate screens */
         enable_bracketed_paste ();
-
-        /* subshell_prompt is NULL here */
-        mc_prompt = (geteuid () == 0) ? "# " : "$ ";
     }
 
     /* Program main loop */
