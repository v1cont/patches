diff -u '--color=auto' '--palette=rs=0:hd=38;5;44:ad=38;5;47:de=38;5;160:ln=38;5;154' -urNp iproute2-4.13.0-orig/configure iproute2-4.13.0/configure
--- iproute2-4.13.0-orig/configure	2017-09-05 19:39:32.039880192 +0300
+++ iproute2-4.13.0/configure	2017-09-06 11:43:13.776999296 +0300
@@ -303,19 +303,19 @@ check_mnl()
 	fi
 }
 
-check_berkeley_db()
+check_gdbm()
 {
     cat >$TMPDIR/dbtest.c <<EOF
 #include <fcntl.h>
 #include <stdlib.h>
-#include <db_185.h>
+#include <gdbm.h>
 int main(int argc, char **argv) {
-	dbopen("/tmp/xxx_test_db.db", O_CREAT|O_RDWR, 0644, DB_HASH, NULL);
+    gdbm_open("/tmp/xxx_test_db.db", 0, GDBM_WRCREAT, 0644, NULL);
 	return 0;
 }
 EOF
-    if $CC -I$INCLUDE -o $TMPDIR/dbtest $TMPDIR/dbtest.c -ldb >/dev/null 2>&1; then
+    if $CC -I$INCLUDE -o $TMPDIR/dbtest $TMPDIR/dbtest.c -lgdbm >/dev/null 2>&1; then
-	echo "HAVE_BERKELEY_DB:=y" >>$CONFIG
+	echo "HAVE_GDBM:=y" >>$CONFIG
 	echo "yes"
     else
 	echo "no"
@@ -393,8 +393,8 @@ check_elf
 echo -n "libmnl support: "
 check_mnl
 
-echo -n "Berkeley DB: "
-check_berkeley_db
+echo -n "GDBM: "
+check_gdbm
 
 echo
 echo -n "docs:"
diff -u '--color=auto' '--palette=rs=0:hd=38;5;44:ad=38;5;47:de=38;5;160:ln=38;5;154' -urNp iproute2-4.13.0-orig/Makefile iproute2-4.13.0/Makefile
--- iproute2-4.13.0-orig/Makefile	2017-09-05 19:39:32.039880192 +0300
+++ iproute2-4.13.0/Makefile	2017-09-06 11:43:13.777999296 +0300
@@ -16,8 +16,8 @@ ARPDDIR?=/var/lib/arpd
 KERNEL_INCLUDE?=/usr/include
 BASH_COMPDIR?=$(DATADIR)/bash-completion/completions
 
-# Path to db_185.h include
-DBM_INCLUDE:=$(DESTDIR)/usr/include
+# Path to gdbm.h include
+GDBM_INCLUDE:=/usr/include
 
 SHARED_LIBS = y
 
diff -u '--color=auto' '--palette=rs=0:hd=38;5;44:ad=38;5;47:de=38;5;160:ln=38;5;154' -urNp iproute2-4.13.0-orig/misc/arpd.c iproute2-4.13.0/misc/arpd.c
--- iproute2-4.13.0-orig/misc/arpd.c	2017-09-05 19:39:32.039880192 +0300
+++ iproute2-4.13.0/misc/arpd.c	2017-09-06 11:43:13.777999296 +0300
@@ -16,7 +16,7 @@
 #include <unistd.h>
 #include <stdlib.h>
 #include <netdb.h>
-#include <db_185.h>
+#include <gdbm.h>
 #include <sys/ioctl.h>
 #include <sys/poll.h>
 #include <errno.h>
@@ -40,8 +40,8 @@
 
 int resolve_hosts;
 
-DB	*dbase;
-char	*dbname = "/var/lib/arpd/arpd.db";
+GDBM_FILE  dbase;
+char	   *dbname = "/var/lib/arpd/arpd.db";
 
 int	ifnum;
 int	*ifvec;
@@ -300,11 +300,11 @@ static int do_one_request(struct nlmsghd
 	int len = n->nlmsg_len;
 	struct rtattr *tb[NDA_MAX+1];
 	struct dbkey key;
-	DBT dbkey, dbdat;
+	datum dbkey, dbdat;
 	int do_acct = 0;
 
 	if (n->nlmsg_type == NLMSG_DONE) {
-		dbase->sync(dbase, 0);
+		gdbm_sync(dbase);
 
 		/* Now we have at least mirror of kernel db, so that
 		 * may start real resolution.
@@ -334,12 +334,12 @@ static int do_one_request(struct nlmsghd
 
 	key.iface = ndm->ndm_ifindex;
 	memcpy(&key.addr, RTA_DATA(tb[NDA_DST]), 4);
-	dbkey.data = &key;
-	dbkey.size = sizeof(key);
+	dbkey.dptr = &key;
+	dbkey.dsize = sizeof(key);
 
-	if (dbase->get(dbase, &dbkey, &dbdat, 0) != 0) {
-		dbdat.data = 0;
-		dbdat.size = 0;
+	if (!gdbm_exists(dbase, dbkey)) {
+		dbdat.dptr = NULL;
+		dbdat.dsize = 0;
 	}
 
 	if (n->nlmsg_type == RTM_GETNEIGH) {
@@ -358,24 +358,24 @@ static int do_one_request(struct nlmsghd
 			 * Kernel is going to initiate broadcast resolution.
 			 * OK, we invalidate our information as well.
 			 */
-			if (dbdat.data && !IS_NEG(dbdat.data))
+			if (dbdat.dptr && !IS_NEG(dbdat.dptr))
 				stats.app_neg++;
 
-			dbase->del(dbase, &dbkey, 0);
+			gdbm_delete(dbase, dbkey);
 		} else {
 			/* If we get this kernel does not have any information.
 			 * If we have something tell this to kernel. */
 			stats.app_recv++;
-			if (dbdat.data && !IS_NEG(dbdat.data)) {
+			if (dbdat.dptr && !IS_NEG(dbdat.dptr)) {
 				stats.app_success++;
-				respond_to_kernel(key.iface, key.addr, dbdat.data, dbdat.size);
+				respond_to_kernel(key.iface, key.addr, dbdat.dptr, dbdat.dsize);
 				return 0;
 			}
 
 			/* Sheeit! We have nothing to tell. */
 			/* If we have recent negative entry, be silent. */
-			if (dbdat.data && NEG_VALID(dbdat.data)) {
-				if (NEG_CNT(dbdat.data) >= active_probing) {
+			if (dbdat.dptr && NEG_VALID(dbdat.dptr)) {
+				if (NEG_CNT(dbdat.dptr) >= active_probing) {
 					stats.app_suppressed++;
 					return 0;
 				}
@@ -386,8 +386,8 @@ static int do_one_request(struct nlmsghd
 		if (active_probing &&
 		    queue_active_probe(ndm->ndm_ifindex, key.addr) == 0 &&
 		    do_acct) {
-			NEG_CNT(dbdat.data)++;
-			dbase->put(dbase, &dbkey, &dbdat, 0);
+			NEG_CNT(dbdat.dptr)++;
+			gdbm_store(dbase, dbkey, dbdat, GDBM_REPLACE);
 		}
 	} else if (n->nlmsg_type == RTM_NEWNEIGH) {
 		if (n->nlmsg_flags&NLM_F_REQUEST)
@@ -397,28 +397,28 @@ static int do_one_request(struct nlmsghd
 			/* Kernel was not able to resolve. Host is dead.
 			 * Create negative entry if it is not present
 			 * or renew it if it is too old. */
-			if (!dbdat.data ||
-			    !IS_NEG(dbdat.data) ||
-			    !NEG_VALID(dbdat.data)) {
+			if (!dbdat.dptr ||
+			    !IS_NEG(dbdat.dptr) ||
+			    !NEG_VALID(dbdat.dptr)) {
 				__u8 ndata[6];
 
 				stats.kern_neg++;
 				prepare_neg_entry(ndata, time(NULL));
-				dbdat.data = ndata;
-				dbdat.size = sizeof(ndata);
-				dbase->put(dbase, &dbkey, &dbdat, 0);
+				dbdat.dptr = ndata;
+				dbdat.dsize = sizeof(ndata);
+				gdbm_store(dbase, dbkey, dbdat, GDBM_REPLACE);
 			}
 		} else if (tb[NDA_LLADDR]) {
-			if (dbdat.data && !IS_NEG(dbdat.data)) {
-				if (memcmp(RTA_DATA(tb[NDA_LLADDR]), dbdat.data, dbdat.size) == 0)
+			if (dbdat.dptr && !IS_NEG(dbdat.dptr)) {
+				if (memcmp(RTA_DATA(tb[NDA_LLADDR]), dbdat.dptr, dbdat.dsize) == 0)
 					return 0;
 				stats.kern_change++;
 			} else {
 				stats.kern_new++;
 			}
-			dbdat.data = RTA_DATA(tb[NDA_LLADDR]);
-			dbdat.size = RTA_PAYLOAD(tb[NDA_LLADDR]);
-			dbase->put(dbase, &dbkey, &dbdat, 0);
+			dbdat.dptr = RTA_DATA(tb[NDA_LLADDR]);
+			dbdat.dsize = RTA_PAYLOAD(tb[NDA_LLADDR]);
+			gdbm_store(dbase, dbkey, dbdat, GDBM_REPLACE);
 		}
 	}
 	return 0;
@@ -484,7 +484,7 @@ static void get_arp_pkt(void)
 	socklen_t sll_len = sizeof(sll);
 	struct arphdr *a = (struct arphdr *)buf;
 	struct dbkey key;
-	DBT dbkey, dbdat;
+	datum dbkey, dbdat;
 	int n;
 
 	n = recvfrom(pset[0].fd, buf, sizeof(buf), MSG_DONTWAIT,
@@ -516,20 +516,18 @@ static void get_arp_pkt(void)
 	if (key.addr == 0)
 		return;
 
-	dbkey.data = &key;
-	dbkey.size = sizeof(key);
+	dbkey.dptr = &key;
+	dbkey.dsize = sizeof(key);
 
-	if (dbase->get(dbase, &dbkey, &dbdat, 0) == 0 && !IS_NEG(dbdat.data)) {
-		if (memcmp(dbdat.data, a+1, dbdat.size) == 0)
-			return;
+	if (gdbm_exists(dbase, dbkey)) {
 		stats.arp_change++;
 	} else {
 		stats.arp_new++;
 	}
 
-	dbdat.data = a+1;
-	dbdat.size = a->ar_hln;
-	dbase->put(dbase, &dbkey, &dbdat, 0);
+	dbdat.dptr = a+1;
+	dbdat.dsize = a->ar_hln;
+	gdbm_store(dbase, dbkey, dbdat, GDBM_REPLACE);
 }
 
 static void catch_signal(int sig, void (*handler)(int))
@@ -673,9 +671,9 @@ int main(int argc, char **argv)
 		}
 	}
 
-	dbase = dbopen(dbname, O_CREAT|O_RDWR, 0644, DB_HASH, NULL);
+	dbase = gdbm_open(dbname, 0, GDBM_WRCREAT, 0644, NULL);
 	if (dbase == NULL) {
-		perror("db_open");
+		fprintf(stderr,"gdbm_open: %s\n", gdbm_strerror(gdbm_errno));
 		exit(-1);
 	}
 
@@ -683,10 +681,10 @@ int main(int argc, char **argv)
 		char buf[128];
 		FILE *fp;
 		struct dbkey k;
-		DBT dbkey, dbdat;
+		datum dbkey, dbdat;
 
-		dbkey.data = &k;
-		dbkey.size = sizeof(k);
+		dbkey.dptr = &k;
+		dbkey.dsize = sizeof(k);
 
 		if (strcmp(do_load, "-") == 0 || strcmp(do_load, "--") == 0) {
 			fp = stdin;
@@ -717,40 +715,43 @@ int main(int argc, char **argv)
 
 			if (ll_addr_a2n((char *) b1, 6, macbuf) != 6)
 				goto do_abort;
-			dbdat.size = 6;
+			dbdat.dsize = 6;
 
-			if (dbase->put(dbase, &dbkey, &dbdat, 0)) {
-				perror("hash->put");
+			if (gdbm_store(dbase, dbkey, dbdat, GDBM_REPLACE)) {
+				perror("gdbm_store");
 				goto do_abort;
 			}
 		}
-		dbase->sync(dbase, 0);
+		gdbm_sync(dbase);
 		if (fp != stdin)
 			fclose(fp);
 	}
 
 	if (do_list) {
-		DBT dbkey, dbdat;
+		datum dbkey;
 
 		printf("%-8s %-15s %s\n", "#Ifindex", "IP", "MAC");
-		while (dbase->seq(dbase, &dbkey, &dbdat, R_NEXT) == 0) {
-			struct dbkey *key = dbkey.data;
+		dbkey = gdbm_firstkey(dbase);
+		while (dbkey.dptr) {
+			struct dbkey *key = dbkey.dptr;
 
 			if (handle_if(key->iface)) {
-				if (!IS_NEG(dbdat.data)) {
+			    datum dbdat = gdbm_fetch(dbase, dbkey);
+				if (!IS_NEG(dbdat.dptr)) {
 					char b1[18];
 
 					printf("%-8d %-15s %s\n",
 					       key->iface,
 					       inet_ntoa(*(struct in_addr *)&key->addr),
-					       ll_addr_n2a(dbdat.data, 6, ARPHRD_ETHER, b1, 18));
+					       ll_addr_n2a(dbdat.dptr, 6, ARPHRD_ETHER, b1, 18));
 				} else {
 					printf("%-8d %-15s FAILED: %dsec ago\n",
 					       key->iface,
 					       inet_ntoa(*(struct in_addr *)&key->addr),
-					       NEG_AGE(dbdat.data));
+					       NEG_AGE(dbdat.dptr));
 				}
 			}
+			dbkey = gdbm_nextkey(dbase, dbkey);
 		}
 	}
 
@@ -810,7 +811,7 @@ int main(int argc, char **argv)
 			break;
 		if (do_sync) {
 			in_poll = 0;
-			dbase->sync(dbase, 0);
+			gdbm_sync(dbase);
 			do_sync = 0;
 			in_poll = 1;
 		}
@@ -829,10 +830,10 @@ int main(int argc, char **argv)
 
 	undo_sysctl_adjustments();
 out:
-	dbase->close(dbase);
+	gdbm_close(dbase);
 	exit(0);
 
 do_abort:
-	dbase->close(dbase);
+	gdbm_close(dbase);
 	exit(-1);
 }
diff -u '--color=auto' '--palette=rs=0:hd=38;5;44:ad=38;5;47:de=38;5;160:ln=38;5;154' -urNp iproute2-4.13.0-orig/misc/Makefile iproute2-4.13.0/misc/Makefile
--- iproute2-4.13.0-orig/misc/Makefile	2017-09-05 19:39:32.039880192 +0300
+++ iproute2-4.13.0/misc/Makefile	2017-09-06 11:44:58.768999283 +0300
@@ -5,7 +5,7 @@ TARGETS=ss nstat ifstat rtacct lnstat
 
 include ../Config
 
-ifeq ($(HAVE_BERKELEY_DB),y)
+ifeq ($(HAVE_GDBM),y)
 	TARGETS += arpd
 endif
 
@@ -38,7 +38,7 @@ rtacct: rtacct.c
 	$(QUIET_CC)$(CC) $(CFLAGS) $(LDFLAGS) -o rtacct rtacct.c $(LDLIBS) -lm
 
 arpd: arpd.c
-	$(QUIET_CC)$(CC) $(CFLAGS) -I$(DBM_INCLUDE) $(CPPFLAGS) $(LDFLAGS) -o arpd arpd.c $(LDLIBS) -ldb
+	$(QUIET_CC)$(CC) $(CFLAGS) -I$(DBM_INCLUDE) $(CPPFLAGS) $(LDFLAGS) -o arpd arpd.c $(LDLIBS) -lgdbm
 
 ssfilter.c: ssfilter.y
 	$(QUIET_YACC)bison ssfilter.y -o ssfilter.c
